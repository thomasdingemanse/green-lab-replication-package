!function () { if ("undefined" == typeof digitalData) return; var t = digitalData.util, n = "isLoginTracked", e = "hasLoggedIn"; let i; t.components.trackTBIDAuth = async function () { window.addEventListener("load", (function () { "true" === Util.getParam(e) && ("true" !== window.sessionStorage.getItem(n) && (digitalData.util.addBehavior("userLogin"), window.sessionStorage.setItem(n, "true")), window.history.replaceState({}, "", function () { var t = window.location.href, n = t.split("?"); if (n.length >= 2) { for (var i = encodeURIComponent(e) + "=", a = n[1].split(/[&;]/g), r = a.length; r-- > 0;)-1 !== a[r].lastIndexOf(i, 0) && a.splice(r, 1); return n[0] + (a.length > 0 ? "?" + a.join("&") : "") } return t }())) })) }, async function () { var t = await async function () { var t = { company: "com", id: "id", newRegistration: "nr", orgID: "oid", role: "r", relationship: "rlt" }, n = await function () { const t = window.location.origin; return new Promise(((n, e) => { import(t + "/c/public/redirect/auth.js").then((t => { t && t.default ? n(t) : e() })).catch((() => { e() })) })) }(); if (!n || !n.default) return {}; var e = await n.default.getUserInfo(); return e = null != e ? e : {}, i = Object.keys(t).reduce((function (n, i) { var a; return n[i] = null !== (a = e[t[i]]) && void 0 !== a ? a : "", n }), {}), i }(); Util.isEmpty(t) || (digitalData.user[0].profile.tb = t) }(), t.components.trackTBIDAuth() }();